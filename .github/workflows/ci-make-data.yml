# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Akaza data building test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install kytea
      run: |
        # Note: Cannot compile kytea 0.4.7 on latest ubuntu.
        # We need to use git HEAD now.
        sudo apt-get install autoconf
        git clone https://github.com/neubig/kytea.git
        cd kytea && autoreconf -i && ./configure --prefix=/usr && make && sudo make install
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest wikiextractor kytea tqdm wheel pybind11
        sudo apt-get install ibus libgirepository1.0-dev libmarisa-dev
    #- name: Lint with flake8
    #  run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test libakaza
      run: |
        cd libakaza
        make
        sudo make install
    - name: Test akaza-data
      run: |
        cd akaza-data
        make
        pip install -r requirements.txt
        sudo make install
    - name: Test pyakaza
      run: |
        cd pyakaza
        pip install -r requirements.txt
        make
        pytest tests
        sudo python setup.py install
    - name: Test ibus-akaza
      run: |
        cd ibus-akaza
        pip install -r requirements.txt
        make ibus_akaza/config.py
        pytest
        sudo python setup.py install
